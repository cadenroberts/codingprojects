#
# CSE186 Assignment 8 Backend
#

openapi: '3.0.3'

info:
  description: CSE186 Assignment 8 Backend
  version: 0.1.0
  title: CSE186 Assignment 8 Backend

servers:
  - url: http://localhost:3010/v0

paths:
  /:
    post:
      description: Login
      requestBody:
        description: Request Body
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Credentials'
      responses:
        200:
          description: Login Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        default:
          description: Unexpected Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnexpectedError'
  /home/workspaces:
    get:
      security:
        - bearerAuth: []
      description: Return workspaces for user
      responses:
        401:
          description: Unauthorized
        200:
          description: Workspaces Response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Workspace'
        default:
          description: Unexpected Error
          content:
            application/json:
              schema:
                $ref: '#components/schemas/UnexpectedError'

  /home/{workspace_id}/channels:
    get:
      security:
        - bearerAuth: []
      description: Return channels for user
      parameters:
        - name: workspace_id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        401:
          description: Unauthorized
        200:
          description: Channels Response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Channel'
        default:
          description: Unexpected Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnexpectedError'
  /home/{channel_id}/messages:
    get:
      security:
        - bearerAuth: []
      description: Return messages for a channel
      parameters:
        - name: channel_id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        401:
          description: Unauthorized
        200:
          description: Messages Response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Message'
        default:
          description: Unexpected Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnexpectedError'
  /home/{message_id}/threads:
    get:
      security:
        - bearerAuth: []
      description: Return messages for a channel
      parameters:
        - name: message_id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        401:
          description: Unauthorized
        200:
          description: Threads Response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Thread'
        default:
          description: Unexpected Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnexpectedError'
components:
  schemas:
    UnexpectedError:
      required:
        - code
        - message
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string

    Credentials:
      type: object
      properties:
        email:
          type: string
          format: email
        password:
          type: string
      required:
        - email
        - password

    User:
      type: object
      properties:
        id:
          type: string
          format: uuid
        accessToken:
          type: string
      required:
        - id
        - accessToken
    
    Workspace:
      type: object
      properties:
        id:
          type: string
          format: uuid
        owner_id:
          type: string
          format: uuid
        data:
          type: object
          properties:
            name:
              type: string
            members:
              type: array
              items:
                type: string
                format: email
      required:
        - id
        - owner_id
        - data

    Channel:
      type: object
      properties:
        id:
          type: string
          format: uuid
        workspace_id:
          type: string
          format: uuid
        data:
          type: object
          properties:
            name:
              type: string
      required:
        - id
        - workspace_id
        - data

    Message:
      type: object
      properties:
        id:
          type: string
          format: uuid
        channel_id:
          type: string
          format: uuid
        data:
          type: object
          properties:
            from:
              type: string
            content:
              type: string
            date:
              type: string
              format: date-time
      required:
        - id
        - channel_id
        - data
    Thread:
      type: object
      properties:
        id:
          type: string
          format: uuid
        message_id:
          type: string
          format: uuid
        data:
          type: object
          properties:
            from:
              type: string
            content:
              type: string
            date:
              type: string
              format: date-time
      required:
        - id
        - message_id
        - data
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT